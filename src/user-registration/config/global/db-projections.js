const mongoose = require("mongoose");

const dbProjections = {
  ROLES_INCLUSION_PROJECTION: {
    role_name: 1,
    role_description: 1,
    role_status: 1,
    role_code: 1,
    network_id: 1,
    role_permissions: 1,
    role_users: 1,
    network: { $arrayElemAt: ["$network", 0] },
    group: { $arrayElemAt: ["$group", 0] },
    createdAt: 1,
    updatedAt: 1,
  },
  ROLES_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = {
      "role_users.notifications": 0,
      "role_users.emailConfirmed": 0,
      "role_users.locationCount": 0,
      "role_users.password": 0,
      "role_users.privilege": 0,
      "role_users.organization": 0,
      "role_users.duration": 0,
      "role_users.__v": 0,
      "role_users.phoneNumber": 0,
      "role_users.profilePicture": 0,
      "role_users.resetPasswordExpires": 0,
      "role_users.resetPasswordToken": 0,
      "role_users.updatedAt": 0,
      "role_users.role": 0,
      "role_users.interest": 0,
      "role_users.org_name": 0,
      "role_users.accountStatus": 0,
      "role_users.hasAccess": 0,
      "role_users.collaborators": 0,
      "role_users.publisher": 0,
      "role_users.bus_nature": 0,
      "role_users.org_department": 0,
      "role_users.uni_faculty": 0,
      "role_users.uni_course_yr": 0,
      "role_users.pref_locations": 0,
      "role_users.job_title": 0,
      "role_users.userName": 0,
      "role_users.product": 0,
      "role_users.website": 0,
      "role_users.description": 0,
      "role_users.networks": 0,
      "role_users.jobTitle": 0,
      "role_users.category": 0,
      "role_users.long_organization": 0,
      "role_users.groups": 0,
      "role_users.permissions": 0,
      "role_users.network_roles": 0,
      "role_users.verified": 0,
      "role_users.analyticsVersion": 0,
      "role_users.email": 0,
      "role_users.country": 0,
      "role_users.createdAt": 0,
      "role_users.is_email_verified": 0,
      network_id: 0,
      "network.__v": 0,
      "network.net_status": 0,
      "network.net_children": 0,
      "network.net_users": 0,
      "network.net_departments": 0,
      "network.net_permissions": 0,
      "network.net_roles": 0,
      "network.net_groups": 0,
      "network.net_email": 0,
      "network.net_phoneNumber": 0,
      "network.net_data_source": 0,
      "network.net_api_key": 0,
      "network.net_category": 0,
      "network.createdAt": 0,
      "network.updatedAt": 0,
      "network.net_acronym": 0,
      "network.net_manager": 0,
      "network.net_manager_username": 0,
      "network.net_manager_firstname": 0,
      "network.net_manager_lastname": 0,
      "role_permissions.description": 0,
      "role_permissions.createdAt": 0,
      "role_permissions.updatedAt": 0,
      "role_permissions.__v": 0,
      "role_permissions.network_id": 0,
    };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign(
        {},
        {
          role_description: 0,
          role_code: 0,
          network_id: 0,
          "role_permissions.description": 0,
          "role_permissions.createdAt": 0,
          "role_permissions.updatedAt": 0,
          "role_permissions.__v": 0,
          "role_permissions.network_id": 0,
          role_users: 0,
          network: 0,
          createdAt: 0,
          updatedAt: 0,
        }
      );
    }

    return projection;
  },

  ACCESS_REQUESTS_INCLUSION_PROJECTION: {
    _id: 1,
    user_id: 1,
    email: 1,
    requestType: 1,
    targetId: 1,
    status: 1,
    createdAt: {
      $dateToString: {
        format: "%Y-%m-%d %H:%M:%S",
        date: "$_id",
      },
    },
    updatedAt: 1,
    user: { $arrayElemAt: ["$user", 0] },
  },
  ACCESS_REQUESTS_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = {
      nothing: 0,
      "user.notifications": 0,
      "user.emailConfirmed": 0,
      "user.locationCount": 0,
      "user.password": 0,
      "user.privilege": 0,
      "user.organization": 0,
      "user.duration": 0,
      "user.__v": 0,
      "user.phoneNumber": 0,
      "user.profilePicture": 0,
      "user.resetPasswordExpires": 0,
      "user.resetPasswordToken": 0,
      "user.updatedAt": 0,
      "user.role": 0,
      "user.interest": 0,
      "user.org_name": 0,
      "user.accountStatus": 0,
      "user.hasAccess": 0,
      "user.collaborators": 0,
      "user.publisher": 0,
      "user.bus_nature": 0,
      "user.org_department": 0,
      "user.uni_faculty": 0,
      "user.uni_course_yr": 0,
      "user.pref_locations": 0,
      "user.job_title": 0,
      "user.userName": 0,
      "user.product": 0,
      "user.website": 0,
      "user.description": 0,
      "user.networks": 0,
      "user.category": 0,
      "user.long_organization": 0,
      "user.groups": 0,
      "user.permissions": 0,
      "user.network_roles": 0,
      "user.group_roles": 0,
      "user.verified": 0,
      "users.analyticsVersion": 0,
      "user.email": 0,
      "user.country": 0,
      "user.is_email_verified": 0,
    };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign({}, {});
    }

    return projection;
  },

  GROUPS_INCLUSION_PROJECTION: {
    _id: 1,
    grp_title: 1,
    grp_status: 1,
    grp_tasks: 1,
    grp_description: 1,
    grp_website: 1,
    grp_profile_picture: 1,
    grp_industry: 1,
    grp_country: 1,
    grp_timezone: 1,
    grp_image: 1,
    createdAt: 1,
    numberOfGroupUsers: {
      $cond: {
        if: { $isArray: "$grp_users" },
        then: { $size: "$grp_users" },
        else: "NA",
      },
    },
    grp_users: "$grp_users",
    grp_manager: { $arrayElemAt: ["$grp_manager", 0] },
  },
  GROUPS_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = {
      "grp_users.__v": 0,
      "grp_users.notifications": 0,
      "grp_users.emailConfirmed": 0,
      "grp_users.groups": 0,
      "grp_users.locationCount": 0,
      "grp_users.group": 0,
      "grp_users.long_network": 0,
      "grp_users.privilege": 0,
      "grp_users.userName": 0,
      "grp_users.password": 0,
      "grp_users.duration": 0,
      "grp_users.createdAt": 0,
      "grp_users.updatedAt": 0,
      "grp_users.updatedAt": 0,
      "grp_users.organization": 0,
      "grp_users.jobTitle": 0,
      "grp_users.website": 0,
      "grp_users.category": 0,
      "grp_users.resetPasswordExpires": 0,
      "grp_users.resetPasswordToken": 0,
      "grp_users.phoneNumber": 0,
      "grp_users.networks": 0,
      "grp_users.role": 0,
      "grp_users.profilePicture": 0,
      "grp_users.long_organization": 0,
      "grp_users.network_roles": 0,
      "grp_users.group_roles": 0,
      "grp_manager.__v": 0,
      "grp_manager.notifications": 0,
      "grp_manager.emailConfirmed": 0,
      "grp_manager.networks": 0,
      "grp_manager.locationCount": 0,
      "grp_manager.network": 0,
      "grp_manager.long_network": 0,
      "grp_manager.privilege": 0,
      "grp_manager.userName": 0,
      "grp_manager.password": 0,
      "grp_manager.duration": 0,
      "grp_manager.group_roles": 0,
      "grp_manager.network_roles": 0,
      "grp_manager.long_organization": 0,
      "grp_manager.createdAt": 0,
      "grp_manager.updatedAt": 0,
      "grp_manager.groups": 0,
      "grp_manager.role": 0,
      "grp_manager.resetPasswordExpires": 0,
      "grp_manager.resetPasswordToken": 0,
      "grp_manager.phoneNumber": 0,
      "grp_manager.organization": 0,
      "grp_manager.profilePicture": 0,
      "grp_manager.is_email_verified": 0,
      "grp_manager.permissions": 0,
    };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign(
        {},
        {
          grp_tasks: 0,
          grp_description: 0,
          createdAt: 0,
          grp_users: 0,
          grp_manager: 0,
        }
      );
    }
    return projection;
  },

  TOKENS_INCLUSION_PROJECTION: {
    _id: 1,
    user_id: 1,
    token: 1,
    last_used_at: 1,
    isActive: 1,
    expires: 1,
    expiredEmailSent: 1,
    name: 1,
    permissions: 1,
    scopes: 1,
    last_ip_address: 1,
    expires_in: 1,
    client: { $arrayElemAt: ["$client", 0] },
    user: { $arrayElemAt: ["$user", 0] },
  },
  TOKENS_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = {
      "user.notifications": 0,
      "user.verified": 0,
      "user.analyticsVersion": 0,
      "user.networks": 0,
      "user.groups": 0,
      "user.emailConfirmed": 0,
      "user.organization": 0,
      "user.role": 0,
      "user.permissions": 0,
      "user.locationCount": 0,
      "user.password": 0,
      "user.long_organization": 0,
      "user.privilege": 0,
      "user.duration": 0,
      "user.createdAt": 0,
      "user.updatedAt": 0,
      "user.__v": 0,
      "user.resetPasswordExpires": 0,
      "user.resetPasswordToken": 0,
      "user.website": 0,
      "user.category": 0,
      "user.network_roles": 0,
      "user.group_roles": 0,
      "user.isActive": 0,
      "user.lastLogin": 0,
      "user.jobTitle": 0,
      "user.userName": 0,
      "user.profilePicture": 0,
      "user.phoneNumber": 0,
      "user.description": 0,
      "user.country": 0,
      "client.__v": 0,
      "client.client_secret": 0,
      "client.createdAt": 0,
      "client.updatedAt": 0,
    };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign({}, {});
    }

    return projection;
  },

  IPS_INCLUSION_PROJECTION: {
    _id: 1,
    ip: 1,
    emails: 1,
    tokens: 1,
    token_names: 1,
    endpoints: 1,
    ipCounts: 1,
    createdAt: 1,
    updatedAt: 1,
    clients: "$clients",
    users: "$users",
  },
  IPS_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = {
      "clients.user_id": 0,
      "clients.client_secret": 0,
      "clients.createdAt": 0,
      "clients.updatedAt": 0,
      "clients.__v": 0,
      "users.notifications": 0,
      "users.emailConfirmed": 0,
      "users.locationCount": 0,
      "users.organization": 0,
      "users.long_organization": 0,
      "users.jobTitle": 0,
      "users.website": 0,
      "users.password": 0,
      "users.description": 0,
      "users.category": 0,
      "users.privilege": 0,
      "users.userName": 0,
      "users.duration": 0,
      "users.__v": 0,
      "users.phoneNumber": 0,
      "users.updatedAt": 0,
      "users.networks": 0,
      "users.role": 0,
      "users.resetPasswordExpires": 0,
      "users.resetPasswordToken": 0,
      "users.network_roles": 0,
      "users.group_roles": 0,
      "users.isActive": 0,
      "users.groups": 0,
      "users.verified": 0,
      "users.google_id": 0,
      "users.permissions": 0,
      "users.profilePicture": 0,
      "users.createdAt": 0,
      "users.updatedAt": 0,
      "users.lastLogin": 0,
    };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign({}, {});
    }

    return projection;
  },

  IP_RANGES_INCLUSION_PROJECTION: {
    _id: 1,
    range: 1,
  },
  IP_RANGES_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = { nothing: 0 };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign({}, {});
    }

    return projection;
  },

  IP_PREFIX_INCLUSION_PROJECTION: {
    _id: 1,
    prefix: 1,
    prefixCounts: 1,
  },
  IP_PREFIX_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = { nothing: 0 };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign({}, {});
    }
    return projection;
  },

  CLIENTS_INCLUSION_PROJECTION: {
    _id: 1,
    client_id: 1,
    client_secret: 1,
    redirect_uri: 1,
    ip_address: 1,
    ip_addresses: 1,
    isActive: 1,
    name: 1,
    user: { $arrayElemAt: ["$user", 0] },
    description: 1,
    networks: "$networks",
    access_token: { $arrayElemAt: ["$access_token", 0] },
  },
  CLIENTS_EXCLUSION_PROJECTION: function (category) {
    const initialProjection = {
      "networks.__v": 0,
      "networks.net_status": 0,
      "networks.net_acronym": 0,
      "networks.createdAt": 0,
      "networks.updatedAt": 0,
      "networks.net_clients": 0,
      "networks.net_roles": 0,
      "networks.net_groups": 0,
      "networks.net_description": 0,
      "networks.net_departments": 0,
      "networks.net_permissions": 0,
      "networks.net_email": 0,
      "networks.net_category": 0,
      "networks.net_phoneNumber": 0,
      "networks.net_manager": 0,
      "user._id": 0,
      "user.notifications": 0,
      "user.emailConfirmed": 0,
      "user.locationCount": 0,
      "user.organization": 0,
      "user.long_organization": 0,
      "user.privilege": 0,
      "user.userName": 0,
      "user.password": 0,
      "user.duration": 0,
      "user.createdAt": 0,
      "user.updatedAt": 0,
      "user.__v": 0,
      "user.role": 0,
      "user.network_roles": 0,
      "user.isActive": 0,
      "user.verified": 0,
      "user.analyticsVersion": 0,
      "user.permissions": 0,
      "user.category": 0,
      "user.group_roles": 0,
      "user.lastLogin": 0,
      "user.resetPasswordExpires": 0,
      "user.resetPasswordToken": 0,
      "user.jobTitle": 0,
      "user.website": 0,
      "user.description": 0,
      "user.country": 0,
      "user.profilePicture": 0,
      "user.timezone": 0,
      "user.groups": 0,
      "user.networks": 0,
    };
    let projection = Object.assign({}, initialProjection);
    if (category === "summary") {
      projection = Object.assign({}, {});
    }
    return projection;
  },
};
module.exports = dbProjections;
